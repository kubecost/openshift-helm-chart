# Security Context settings for Redhat OpenShift cluster:

kubecostDeployment:
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
    runAsNonRoot: true
    # fsGroup: 1001070000
    # runAsGroup: 1001070000
    # runAsUser: 1001070000
kubecostModel:
  etlCloudAsset: true # set to true to enable kubecost to include out-of-cluster cloud resources  (uses more memory)
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL
kubecostFrontend:
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL
kubecostNetworkCosts:
  securityContext: {}
  containerSecurityContext: {}

prometheus:
  nodeExporter:
    enabled: false
  kubeStateMetrics:
    enabled: false
  kube-state-metrics:
    disabled: true
  podSecurityPolicy:
    enabled: false
  server:
    containerSecurityContext:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
              - ALL
  sidecarContainers:
    containerSecurityContext:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
  configmapReload:
    containerSecurityContext:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
grafana:
  rbac:
    pspEnabled: false
  grafana:
    containerSecurityContext:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
  initContainers:
    containerSecurityContext:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
  sidecar:
    containerSecurityContext:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
thanos:
  thanosstore:
    containerSecurityContext:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
  thanosqueryfrontend:
    containerSecurityContext:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
  thanosquery:
    containerSecurityContext:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
  thanoscompact:
    containerSecurityContext:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL

# Disable Pod Security Policy (PSP)
# Kubecost PSP
podSecurityPolicy:
    enabled: false

# Network Costs PSP
networkCosts:
  enabled: false # if enabling network costs, also set the given cloud provider to true
  config:
    services:
      amazon-web-services: false
      google-cloud-services: false
      azure-cloud-services: false
  podSecurityPolicy:
    enabled: false

# optional
global:
  grafana:
    enabled: false
    proxy: false